{"version":3,"sources":["serviceWorker.js","components/title.js","components/menuitem.js","components/menu.js","components/mainpage.js","index.js"],"names":["Boolean","window","location","hostname","match","PageHeader","className","src","process","alt","MenuItem","props","price","description","axios","require","Menu","state","menuItems","get","this","amount","then","response","console","log","data","menu_items","catch","error","finally","result","i","length","applyPrice","setState","newMenuList","JSON","parse","localStorage","getItem","title","generateMenu","setItem","stringify","Math","floor","random","styles","Array","apply","map","item","idx","key","React","Component","MainPage","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"gNAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCQSC,MAtBf,WACI,OACI,yBAAKC,UAAU,kBACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,UACX,4FACA,wBAAIA,UAAU,aAAd,qBAKR,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,UACX,yBAAKC,IAAKC,6BAAsCC,IAAI,oB,uDCLzDC,MARf,SAAkBC,GACd,OACI,wBAAIL,UAAU,QAAO,oCAAUK,EAAMC,OAArC,MAAwDD,EAAME,cCJhEC,EAAQC,EAAQ,IA2EPC,E,kDAtEX,WAAYL,GAAQ,IAAD,8BACf,cAAMA,IACDM,MAAQ,CACTC,UAAW,IAHA,E,6LASIJ,EAAMK,IAAI,4CAA8CC,KAAKT,MAAMU,QACjFC,MAAK,SAAUC,GAEZ,OADAC,QAAQC,IAAIF,GACLA,EAASG,KAAKC,cAExBC,OAAM,SAAUC,GAEbL,QAAQC,IAAII,MAEfC,SAAQ,e,OAGb,IAZIC,E,OAYKC,EAAI,EAAGA,EAAID,EAAOE,OAAQD,IAC/BR,QAAQC,IAAIM,EAAOC,IACnBD,EAAOC,GAAP,MAAqBZ,KAAKc,aAE9BV,QAAQC,IAAIM,GACZX,KAAKe,SAAS,CACVjB,UAAWa,I,sQAKXK,EAAcC,KAAKC,MAAMC,aAAaC,QAAQpB,KAAKT,MAAM8B,SAAW,IACxDR,OAAS,G,gBACrBb,KAAKe,SAAS,CACVjB,UAAWkB,I,sCAGThB,KAAKsB,e,wJAKfzC,OAAOsC,aAAaI,QAAQvB,KAAKT,MAAM8B,MAAOJ,KAAKO,UAAUxB,KAAKH,MAAMC,c,mCAIxE,OAAO2B,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,I,+BAIlC,IAAD,OACL,OACI,yBAAKzC,UAAWc,KAAKT,MAAMqC,QACvB,wBAAI1C,UAAU,6BAA6Bc,KAAKT,MAAM8B,OACtD,6BACI,wBAAInC,UAAU,iBACTc,KAAKH,MAAMC,UAAUe,OAAS,EAAIgB,MAAMC,MAAM,EAAGD,MAAM7B,KAAKT,MAAMU,SAAS8B,KAAI,SAACC,EAAMC,GACnF,OAAO,kBAAC,EAAD,CAAUC,IAAKD,EAAKzC,MAAO,EAAKK,MAAMC,UAAUmC,GAAKzC,MAAOC,YAAa,EAAKI,MAAMC,UAAUmC,GAAKxC,iBAE1G,Y,GA7DT0C,IAAMC,WCsBVC,MArBf,WACI,OACI,yBAAKnD,UAAU,kBACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,OACX,kBAAC,EAAD,CAAMmC,MAAO,aAAcO,OAAQ,aAAc3B,OAAQ,KACzD,kBAAC,EAAD,CAAMoB,MAAO,aAAcO,OAAQ,aAAc3B,OAAQ,MAE7D,yBAAKf,UAAU,OACX,kBAAC,EAAD,CAAMmC,MAAO,cAAeO,OAAQ,0BAA2B3B,OAAQ,MAE3E,yBAAKf,UAAU,OACX,kBAAC,EAAD,CAAMmC,MAAO,QAASO,OAAQ,aAAc3B,OAAQ,IACpD,kBAAC,EAAD,CAAMoB,MAAO,UAAWO,OAAQ,aAAc3B,OAAQ,O,MCVtEqC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SLqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3C,MAAK,SAAA4C,GACJA,EAAaC,gBAEdvC,OAAM,SAAAC,GACLL,QAAQK,MAAMA,EAAMuC,a","file":"static/js/main.64442751.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\n\n\nfunction PageHeader() {\n    return (\n        <div className='container my-4'>\n            <div className='row text-center'>\n                <div className='col-12'>\n                    <p>123 HAYS STREET LEXINGTON, KY 40509 / OPEN EVERYDAY 10AM-10PM</p>\n                    <h1 className='display-3'>\n                        THE CORONA CAFE\n                    </h1>\n                </div>\n            </div>\n            <div className='row text-center mt-4'>\n                <div className='col-12'>\n                    <img src={process.env.PUBLIC_URL + '/cafe.png'} alt='corona cafe' />\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\n\nexport default PageHeader","import React from 'react';\n\n\n\nfunction MenuItem(props) {\n    return (\n        <li className='py-3'><strong>${props.price}</strong> - {props.description}</li>\n    );\n}\n\n\n\nexport default MenuItem","import React from 'react';\nimport MenuItem from './menuitem';\nconst axios = require('axios');\n\n\n\nclass Menu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            menuItems: []\n        };\n    }\n\n\n    async generateMenu() {\n        let result = await axios.get('https://entree-f18.herokuapp.com/v1/menu/' + this.props.amount)\n            .then(function (response) {\n                console.log(response);\n                return response.data.menu_items;\n            })\n            .catch(function (error) {\n                // handle error\n                console.log(error);\n            })\n            .finally(function () {\n                // always executed\n            });\n        for (let i = 0; i < result.length; i++) {\n            console.log(result[i]);\n            result[i]['price'] = this.applyPrice()\n        }\n        console.log(result)\n        this.setState({\n            menuItems: result\n        });\n    }\n\n    async componentDidMount() {\n        let newMenuList = JSON.parse(localStorage.getItem(this.props.title)) || [];\n        if (newMenuList.length > 0) {\n            this.setState({\n                menuItems: newMenuList\n            });\n        } else {\n            await this.generateMenu();\n        };\n    }\n\n    componentDidUpdate() {\n        window.localStorage.setItem(this.props.title, JSON.stringify(this.state.menuItems));\n    }\n\n    applyPrice() {\n        return Math.floor(Math.random() * 25) + 5;\n    }\n\n    \n    render() {\n        return (\n            <div className={this.props.styles}>\n                <h1 className='text-center border-bottom'>{this.props.title}</h1>\n                <div>\n                    <ul className='list-unstyled'>\n                        {this.state.menuItems.length > 0 ? Array.apply(0, Array(this.props.amount)).map((item, idx) => {\n                            return <MenuItem key={idx} price={this.state.menuItems[idx].price} description={this.state.menuItems[idx].description} />\n                        }\n                        ) : null}\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\nexport default Menu","import React from 'react';\nimport PageHeader from './title';\nimport Menu from './menu';\nimport './mainpage.css';\n\n\n\nfunction MainPage() {\n    return (\n        <div className='container mb-3'>\n            <PageHeader />\n            <div className='row'>\n                <Menu title={'Appetizers'} styles={'col-6 mt-4'} amount={10} />\n                <Menu title={'Lunch Menu'} styles={'col-6 mt-4'} amount={10} />\n            </div>\n            <div className='row'>\n                <Menu title={'Main Course'} styles={'col-12 text-center mt-4'} amount={15} />\n            </div>\n            <div className='row'>\n                <Menu title={'Sides'} styles={'col-6 mt-4'} amount={8} />\n                <Menu title={'Dessert'} styles={'col-6 mt-4'} amount={8} />\n            </div>\n        </div>\n    );\n}\n\n\n\nexport default MainPage","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport './components/mainpage.css';\nimport * as serviceWorker from './serviceWorker';\nimport MainPage from './components/mainpage';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <MainPage />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}